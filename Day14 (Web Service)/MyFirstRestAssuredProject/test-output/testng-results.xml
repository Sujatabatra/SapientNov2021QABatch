<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="15202" started-at="2021-12-02T14:57:39 IST" finished-at="2021-12-02T14:57:55 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="15202" started-at="2021-12-02T14:57:39 IST" finished-at="2021-12-02T14:57:55 IST">
      <class name="com.sujata.test.MyFirstRestAssuredProject">
        <test-method status="PASS" signature="checkBookIdNegative()[pri:0, instance:com.sujata.test.MyFirstRestAssuredProject@27a8c74e]" name="checkBookIdNegative" duration-ms="5036" started-at="2021-12-02T14:57:39 IST" finished-at="2021-12-02T14:57:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookIdNegative -->
        <test-method status="PASS" signature="checkBookIdPositive()[pri:0, instance:com.sujata.test.MyFirstRestAssuredProject@27a8c74e]" name="checkBookIdPositive" duration-ms="1310" started-at="2021-12-02T14:57:44 IST" finished-at="2021-12-02T14:57:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookIdPositive -->
        <test-method status="PASS" signature="checkingForStatusTestCase()[pri:0, instance:com.sujata.test.MyFirstRestAssuredProject@27a8c74e]" name="checkingForStatusTestCase" duration-ms="1276" started-at="2021-12-02T14:57:46 IST" finished-at="2021-12-02T14:57:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingForStatusTestCase -->
        <test-method status="PASS" signature="createOrderCheck()[pri:0, instance:com.sujata.test.MyFirstRestAssuredProject@27a8c74e]" name="createOrderCheck" duration-ms="2352" started-at="2021-12-02T14:57:47 IST" finished-at="2021-12-02T14:57:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrderCheck -->
        <test-method status="PASS" signature="demoTest()[pri:0, instance:com.sujata.test.MyFirstRestAssuredProject@27a8c74e]" name="demoTest" duration-ms="1304" started-at="2021-12-02T14:57:49 IST" finished-at="2021-12-02T14:57:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoTest -->
        <test-method status="FAIL" signature="testCaseForReqRes()[pri:0, instance:com.sujata.test.MyFirstRestAssuredProject@27a8c74e]" name="testCaseForReqRes" duration-ms="1418" started-at="2021-12-02T14:57:51 IST" finished-at="2021-12-02T14:57:52 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path data.size() doesn't match.
Expected: a value greater than <0>
  Actual: 0
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path data.size() doesn't match.
Expected: a value greater than <0>
  Actual: 0

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.sujata.test.MyFirstRestAssuredProject.testCaseForReqRes(MyFirstRestAssuredProject.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseForReqRes -->
        <test-method status="PASS" signature="testForBookList1()[pri:0, instance:com.sujata.test.MyFirstRestAssuredProject@27a8c74e]" name="testForBookList1" duration-ms="1184" started-at="2021-12-02T14:57:52 IST" finished-at="2021-12-02T14:57:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForBookList1 -->
        <test-method status="PASS" signature="testForBookList2()[pri:0, instance:com.sujata.test.MyFirstRestAssuredProject@27a8c74e]" name="testForBookList2" duration-ms="1217" started-at="2021-12-02T14:57:53 IST" finished-at="2021-12-02T14:57:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForBookList2 -->
      </class> <!-- com.sujata.test.MyFirstRestAssuredProject -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
